import "../rv_base/RVF.core_desc"

InstructionSet XCoreVFloatMem extends RV32F {
    instructions {
        // ?
        CVF_FLW_ri_inc {
            encoding: imm12[11:0] :: rs1[4:0] :: 3'b010 :: rd[4:0] :: 7'b0001011;  // TODO
            assembly: {"cvf.flw", "{name(rd)}, {imm12}({name(rs1)}!)"};
            behavior: {
                unsigned<XLEN> load_address = X[rs1];
                unsigned<32> res = (unsigned<32>)MEM[load_address];
                if (rd != 0) F[rd] = (unsigned<XLEN>)res;
                X[rs1] += (signed)imm12;
            }
        }
        CVF_FLW_rr_inc {
            encoding: 7'b0000010 :: rs2[4:0] :: rs1[4:0] :: 3'b011 :: rd[4:0] :: 7'b0101011;  // TODO
            assembly: {"cvf.flw", "{name(rd)}, {name(rs2)}({name(rs1)})"};
            behavior: {
                unsigned<XLEN> load_address = X[rs1];  // TODO: signed?
                unsigned<32> res = (unsigned<32>)MEM[load_address];
                if(rd != 0) F[rd] = (unsigned<XLEN>)res;
                X[rs1] += (signed)X[rs2];
            }
        }
        CVF_FLW_rr {
            encoding: 7'b0000110 :: rs2[4:0] :: rs1[4:0] :: 3'b011 :: rd[4:0] :: 7'b0101011;  // TOO
            assembly: {"cvf.flh", "{name(rd)}, {name(rs2)}({name(rs1)})"};
            behavior: {
                unsigned<XLEN> load_address = X[rs1] + X[rs2];  // TODO: signed?
                unsigned<32> res = (unsigned<32>)MEM[load_address];
                if(rd != 0) F[rd] = (unsigned<XLEN>)res;
            }
        }
        CVF_FSW_ri_inc {
            encoding: imm12[11:5] :: rs2[4:0] :: rs1[4:0] :: 3'b010 :: imm12[4:0] :: 7'b0101011;  // TODO
            assembly: {"cvf.fsw", "{name(rs2)}, {imm12}({name(rs1)}!)"};
            behavior: {
                unsigned<XLEN> store_address = X[rs1];
                MEM[store_address] = (unsigned<32>)F[rs2];
                X[rs1] += (signed)imm12;
            }
        }
        CVF_FSW_rr_inc {
            encoding: 7'b0010010 :: rs2[4:0] :: rs1[4:0] :: 3'b011 :: rs3[4:0] :: 7'b0101011;  // TODO
            assembly: {"cvf.fsw", "{name(rs2)}, {name(rs3)}({name(rs1)})"};
            behavior: {
                unsigned<XLEN> store_address = X[rs1];  // TODO: signed?
                MEM[store_address] = (unsigned<32>)F[rs2];
                X[rs1] += (signed)X[rs3];
            }
        }
        CVF_FSW_rr {
            encoding: 7'b0010110 :: rs2[4:0] :: rs1[4:0] :: 3'b011 :: rs3[4:0] :: 7'b0101011;  // TODO
            assembly: {"cvf.fsw", "{name(rs2)}, {name(rs3)}({name(rs1)})"};
            behavior: {
                unsigned<XLEN> store_address = X[rs1] + X[rs3];  // TODO: signed?
                                MEM[store_address] = (signed<32>)X[rs2];
            }
        }
    }
}
